.token {
    /** A word or symbol in `code` that has been parsed.

        @example
        <code>
        <span class="tag token">&lt;i
        <span class="attr-name token">class</span>="<span class="attr-value classname- token">glyph</span>"&gt;
        </span>
        </code>

    */

    &.doctype,
    &.atrule,
    &.cdata {
        .color( inv-lo );
    }

    &.comment {
        .color( danger, .8 );
        font-style: oblique;
    }

    &.tag,
    &.tag .punctuation {
        .color( delta );
    }

    &.attr-value {
        .color( inv );
    }

    &.classname-,
    &.tagname-,
    &.attr-name {
        &.pattern-,
        &.helper-{
            /** A CSS class name corresponding to a pattern. */
            .color( alpha );
            .glow( alpha );
        }
        &.member- {
                 /** A CSS class name corresponding to a member. */
            .color( beta );
            .glow( beta );
        }
        &.modifier-,
        &.state- {
            /** A CSS class name corresponding to a modifier or state. */
            .color( gamma );
            .glow( gamma );
        }
    }

    &.erb,
    &.mustache {
        .color( inv-hi );
        font-style: oblique;
    }

    &.keyword {
    }

    &.property,
    &.boolean,
    &.number,
    &.constant,
    &.symbol,
    &.selector,
    &.string,
    &.builtin,
    &.operator,
    &.entity,
    &.url,
    &.string,
    &.variable,
    &.function,
    &.regex,
    &.important {
        /** Modifiers used by Prism, but not Styleboard. */
        .color( warning );
    }
}